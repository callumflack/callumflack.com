/**
 * easy media queries
 * @include bp(tablet) { SCSS here };
 * http://css-tricks.com/media-queries-sass-3-2-and-codekit/
 * http://css-tricks.com/resolution-specific-stylesheets/
 * http://css-tricks.com/css-media-queries/
 */

@mixin bp($point) {
	@if $point == desk {
		@media (max-width: 1620px) { @content; }
	}
	@if $point == air {
		@media (min-width: 1300px) and (max-width: 1619px) { @content; } //default max-width: 1600 // Air 11in 1366 by 768, 13in 1440 by 900
	}
	@if $point == tablet {
		@media (max-width: 1299px) { @content; }
	}
	@if $point == palm {
		@media (max-width: 768px) { @content; }
	}
	@else if $point == osx {
		@media (max-width: 400px) { @content; } //set this to 320 upon pushing live
	}
}

/**
 * bourbon pixels to ems converter
 */

@function rem($pxval, $base: 16) {
    @return ($pxval / $base) * 1rem;
}

/**
 * https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_font-face.scss
 * Order of the includes matters, and it is: normal, bold, italic, bold+italic.
 * @include font-face(ProximaNova, 'fonts/proximanova_semibolditalic_macroman/ProximaNova-SboldIt-webfont', normal, italic);
 */

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style:  $style;
    src: url('#{$file-path}.eot');
    src: url('#{$file-path}.eot?#iefix')          format('embedded-opentype'),
         url('#{$file-path}.woff')                format('woff'),
         url('#{$file-path}.ttf')                 format('truetype'),
         url('#{$file-path}.svg##{$font-family}') format('svg');
  }
}

/**
 * Inuit: create a fully formed type style (sizing and vertical rhythm)
 * by passing in a single value, e.g.: @include font-size(10px);
 * http://jsfiddle.net/redclover/mkYtY/
 * http://designbyjoel.com/blog/2013-02-28-sass-rems/
 * or? https://gist.github.com/ijy/1441967
 * @function rem($target, $context: $fSb) {
 *   @if $target == 0 { @return 0 }
 *   @return $target / $context + 0em;
 */

@mixin font-size($font-size, $line-height:false) {
    font-size:$font-size;
    font-size:($font-size / $fSb)*1rem;
    @if $line-height == true {
        line-height:ceil($font-size / $lHb) * ($lHb / $font-size);
    }
}



